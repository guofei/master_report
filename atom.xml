<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Master Report]]></title>
  <link href="http://guofei.github.com/master_report/atom.xml" rel="self"/>
  <link href="http://guofei.github.com/master_report/"/>
  <updated>2013-03-06T01:59:55+09:00</updated>
  <id>http://guofei.github.com/master_report/</id>
  <author>
    <name><![CDATA[kaku]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[暗号化]]></title>
    <link href="http://guofei.github.com/master_report/blog/2013/03/04/an-hao-hua/"/>
    <updated>2013-03-04T13:34:00+09:00</updated>
    <id>http://guofei.github.com/master_report/blog/2013/03/04/an-hao-hua</id>
    <content type="html"><![CDATA[<h3>カウンタモード</h3>

<p>NPAPIでJavaScriptのカウンタモードを作った</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// カウンタ番号を指定しカウンタを生成する
</span><span class='line'>var ctr_id1 = plugin.counter_create(1);
</span><span class='line'>// 暗号化
</span><span class='line'>var ciphertext1 = plugin.counter_encrypt("password", "text1", ctr_id1);
</span><span class='line'>var ciphertext2 = plugin.counter_encrypt("password", "text2", ctr_id1);
</span><span class='line'>// 復号化
</span><span class='line'>var ctr_id2 = plugin.counter_create(1);
</span><span class='line'>var text1 = plugin.counter_decrypt("password", ciphertext1, ctr_id2);
</span><span class='line'>var text2 = plugin.counter_decrypt("password", ciphertext2, ctr_id2);</span></code></pre></td></tr></table></div></figure>


<h3>friendsocketとの統合</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>//client
</span><span class='line'>friendsocketio.connect(host, name, pwd, s_name, appname, pri_key_path,
</span><span class='line'>                       key_pwd, pub_key_path, serverpub_key_path);
</span><span class='line'>//server
</span><span class='line'>friendsocketio.listen(host, name, pwd, appname, pri_key_path, key_pwd);</span></code></pre></td></tr></table></div></figure>


<p><img src="http://ww3.sinaimg.cn/large/a74ecc4cjw1e2fd8yd47cj.jpg" alt="ctr-mode" /></p>

<p>2512kbps</p>

<p>前の暗号無しより速い原因：
1. Macのfirefox3からlinuxのfirefox9に移行した
2. utwlan-xから研究室のネットワークを利用した。pingで計ったら、研究室のネットワークの方が速い
3. 前に計った時、時々大きな値が出た。今回は安定のように見える</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[暗号化]]></title>
    <link href="http://guofei.github.com/master_report/blog/2013/02/27/an-hao-hua/"/>
    <updated>2013-02-27T02:22:00+09:00</updated>
    <id>http://guofei.github.com/master_report/blog/2013/02/27/an-hao-hua</id>
    <content type="html"><![CDATA[<h3>Linuxへの対応</h3>

<p>藩さんはMacを持ってないので、FriendsocketをLinuxへの対応をした</p>

<p>Linuxのfirefox 10で動けるようになった。</p>

<h3>NPAPIでの共通鍵への対応</h3>

<p>JavaScriptからは以下の関数を追加した</p>

<p>元の関数</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>load_public_key(path)
</span><span class='line'>load_private_key(path, password)
</span><span class='line'>decrypt(key, text)
</span><span class='line'>encrypt(key, base64text)</span></code></pre></td></tr></table></div></figure>


<p>新しく追加した関数</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>aes_decrypt(source, password)
</span><span class='line'>aes_encrypt(crypted, password)</span></code></pre></td></tr></table></div></figure>


<p>まだ問題があるので、Debug中</p>

<h3>カウンタモード</h3>

<p>通信の時最初の一回目で公開鍵でパスワードと最初の番号を送る</p>

<p>２回目からカウンタ（ランダムの文字列＋カウンタ番号）を暗号化し、送信したい文字列とXORを求める。その結果を相手に送る。JavaScriptで送信できるのは文字列ので、最初の８文字はランダムの文字列にする</p>

<p>受信したカウンタを復号化し、文字列とXORし、元のものに戻す。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[google talkでの評価]]></title>
    <link href="http://guofei.github.com/master_report/blog/2013/02/18/google-talkdefalseping-jia/"/>
    <updated>2013-02-18T14:51:00+09:00</updated>
    <id>http://guofei.github.com/master_report/blog/2013/02/18/google-talkdefalseping-jia</id>
    <content type="html"><![CDATA[<h3>google talkで50KBずつ計った</h3>

<h4>暗号化なし</h4>

<table>
<thead>
<tr>
<th>KB      </th>
<th>   ms</th>
</tr>
</thead>
<tbody>
<tr>
<td>50     .</td>
<td>   848</td>
</tr>
<tr>
<td>100    .</td>
<td>   1250</td>
</tr>
<tr>
<td>150    .</td>
<td>   1581</td>
</tr>
<tr>
<td>200    .</td>
<td>   2019</td>
</tr>
<tr>
<td>250    .</td>
<td>   2593</td>
</tr>
<tr>
<td>300    .</td>
<td>   2597</td>
</tr>
<tr>
<td>350    .</td>
<td>   2650</td>
</tr>
<tr>
<td>400    .</td>
<td>   2698</td>
</tr>
<tr>
<td>450    .</td>
<td>   3029</td>
</tr>
<tr>
<td>500    .</td>
<td>   3412</td>
</tr>
<tr>
<td>550    .</td>
<td>   3460</td>
</tr>
<tr>
<td>600    .</td>
<td>   3590</td>
</tr>
<tr>
<td>650    .</td>
<td>   3686</td>
</tr>
<tr>
<td>700    .</td>
<td>   3954</td>
</tr>
</tbody>
</table>


<h4>暗号化あり</h4>

<table>
<thead>
<tr>
<th>KB      </th>
<th>   ms</th>
</tr>
</thead>
<tbody>
<tr>
<td>50    . </td>
<td>   1547</td>
</tr>
<tr>
<td>100   . </td>
<td>   3280</td>
</tr>
<tr>
<td>150   . </td>
<td>   4151</td>
</tr>
<tr>
<td>200   . </td>
<td>   5621</td>
</tr>
<tr>
<td>250   . </td>
<td>   8049</td>
</tr>
<tr>
<td>300   . </td>
<td>   11104</td>
</tr>
<tr>
<td>350   . </td>
<td>   13687</td>
</tr>
<tr>
<td>400   . </td>
<td>   14154</td>
</tr>
<tr>
<td>450   . </td>
<td>   15679</td>
</tr>
<tr>
<td>500   . </td>
<td>   18640</td>
</tr>
</tbody>
</table>


<p><img src="http://ww4.sinaimg.cn/large/a74ecc4cjw1e1xifltd3aj.jpg" alt="google talk" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[論文の修正]]></title>
    <link href="http://guofei.github.com/master_report/blog/2013/02/04/lun-wen-falsexiu-zheng/"/>
    <updated>2013-02-04T14:27:00+09:00</updated>
    <id>http://guofei.github.com/master_report/blog/2013/02/04/lun-wen-falsexiu-zheng</id>
    <content type="html"><![CDATA[<h3>修正</h3>

<p>川島先生が指摘した日本語の部分を修正した。川島先生の名前を謝辞に入れた。</p>

<p>関連研究の部分を修正した。</p>

<p>スクリーンショットアプリケーションの部分を修正した。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修論発表]]></title>
    <link href="http://guofei.github.com/master_report/blog/2013/01/28/xiu-lun-fa-biao/"/>
    <updated>2013-01-28T16:31:00+09:00</updated>
    <id>http://guofei.github.com/master_report/blog/2013/01/28/xiu-lun-fa-biao</id>
    <content type="html"><![CDATA[<h3>スクリーンショットアプリケーションの修正</h3>

<p>元ではクライアントがスクリーンショットを受信すると、画像をファイルとして保存する</p>

<p>現在はクライアントがスクリーンショットを受信すると、画像がブラウザで表示できるようになった。</p>

<h3>修論発表</h3>

<p>修論発表が終わったが、途中で問題がおこった。</p>

<p>スライドを確認して問題なかったが、パソコンが何ヶ月ずっと電源を切らなかったと思って、一回再起動したら、３枚の画像が表示できなくなった。対策としてはパワーポイントを再起動すれば表示できることがわかったが、</p>

<p>将来、似たような問題がおこると、一番良い対策は何でしょうか？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修論提出しました]]></title>
    <link href="http://guofei.github.com/master_report/blog/2013/01/16/xiu-lun-ti-chu-simasita/"/>
    <updated>2013-01-16T15:06:00+09:00</updated>
    <id>http://guofei.github.com/master_report/blog/2013/01/16/xiu-lun-ti-chu-simasita</id>
    <content type="html"><![CDATA[<h3>発表の準備</h3>

<h3>friendsocket</h3>

<p>性能評価のGoogle Talkのおかしいところを判明する</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[スクリーンショットアプリ]]></title>
    <link href="http://guofei.github.com/master_report/blog/2013/01/07/sukurinsiyotutoapuri/"/>
    <updated>2013-01-07T13:43:00+09:00</updated>
    <id>http://guofei.github.com/master_report/blog/2013/01/07/sukurinsiyotutoapuri</id>
    <content type="html"><![CDATA[<h3>スクリーンショットのアプリケーション</h3>

<p>こちらのものを利用し、実装した
https://github.com/rowan-lewis/abduction</p>

<p>friendsocketの一部をこのアドオンにコピーし修正した。</p>

<p>ツールでサーバとクライアントを起動する
<img src="http://ww2.sinaimg.cn/large/a74ecc4cjw1e0kwsihnthj.jpg" alt="ツールでサーバとクライアントを起動する" /></p>

<p>右クリック
<img src="http://ww1.sinaimg.cn/large/a74eed94jw1e0kwsu3idtj.jpg" alt="右クリック" /></p>

<p>サーバでスクリーンショットの部分を選択する
<img src="http://ww3.sinaimg.cn/large/a74e55b4jw1e0kwt4172yj.jpg" alt="サーバでスクリーンショットの部分を選択する" /></p>

<p>クライアント側でreceived from server、保存
<img src="http://ww4.sinaimg.cn/large/a74ecc4cjw1e0kwtdt8wbj.jpg" alt="クライアント側でreceived from server、保存" /></p>

<p>LANとGoogle Talk両方とも利用できるようになった。画像のサイズは１００〜１５０KB。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[論文:評価]]></title>
    <link href="http://guofei.github.com/master_report/blog/2012/12/26/lun-wen-ping-jia/"/>
    <updated>2012-12-26T14:46:00+09:00</updated>
    <id>http://guofei.github.com/master_report/blog/2012/12/26/lun-wen-ping-jia</id>
    <content type="html"><![CDATA[<h3>論文</h3>

<p>３５ページまで、設計の部分は１ページ増やせる。実装の部分は大体の流れを書いて後３ページぐらい増やせる。評価は３、４ページ</p>

<h3>評価</h3>

<p>urlを相手に送り、相手のブラウザで開くようなアプリを書いた。</p>

<p>htmlでの実装はまだ前の危ない方法でやっている。修正してみたが、アドオンのメッソドを呼べない。この辺は後で小関さんに詳しく聞く。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修士論文]]></title>
    <link href="http://guofei.github.com/master_report/blog/2012/12/17/xiu-shi-lun-wen/"/>
    <updated>2012-12-17T13:35:00+09:00</updated>
    <id>http://guofei.github.com/master_report/blog/2012/12/17/xiu-shi-lun-wen</id>
    <content type="html"><![CDATA[<h3>性能評価</h3>

<h4>暗号化なし</h4>

<table>
<thead>
<tr>
<th></th>
<th>byte    </th>
<th>ms</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>1       </td>
<td>12.1</td>
</tr>
<tr>
<td></td>
<td>64      </td>
<td>13.5</td>
</tr>
<tr>
<td></td>
<td>1024    </td>
<td>20.8</td>
</tr>
</tbody>
</table>


<p>LAN</p>

<table>
<thead>
<tr>
<th></th>
<th>byte    </th>
<th>ms</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>1       </td>
<td>88.6</td>
</tr>
<tr>
<td></td>
<td>64      </td>
<td>89.8</td>
</tr>
<tr>
<td></td>
<td>1024    </td>
<td>94.1</td>
</tr>
</tbody>
</table>


<p>Google Talk</p>

<h4>暗号化あり</h4>

<table>
<thead>
<tr>
<th></th>
<th>byte    </th>
<th>ms</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>1       </td>
<td>17.1</td>
</tr>
<tr>
<td></td>
<td>64      </td>
<td>17.0</td>
</tr>
<tr>
<td></td>
<td>1024    </td>
<td>30.86</td>
</tr>
</tbody>
</table>


<p>LAN</p>

<table>
<thead>
<tr>
<th></th>
<th>byte    </th>
<th>ms</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>1       </td>
<td>105.6</td>
</tr>
<tr>
<td></td>
<td>64      </td>
<td>104.4</td>
</tr>
<tr>
<td></td>
<td>1024    </td>
<td>118.8</td>
</tr>
</tbody>
</table>


<p>Google Talk</p>

<h3>協調アプリケーション</h3>

<h4>chatアプリ</h4>

<p>XMPPのクライアントを使えばできるので、意味がない。クライアントをインストールしてない時、chatアプリが使える。</p>

<h4>相手にURLを送るアプリ</h4>

<h4>ブックマーク共有アプリ</h4>

<p>相手にURLを送るアプリと大体似ているが、スートレージが必要になる。</p>

<h4>スクリーンショットアプリ</h4>

<p>実現するのは時間がかかる</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[卒業論文]]></title>
    <link href="http://guofei.github.com/master_report/blog/2012/11/26/zu-ye-lun-wen/"/>
    <updated>2012-11-26T15:10:00+09:00</updated>
    <id>http://guofei.github.com/master_report/blog/2012/11/26/zu-ye-lun-wen</id>
    <content type="html"><![CDATA[<h3>Friendsocket</h3>

<p>Firefox9で動けるようになった</p>

<p>最初自分で修正してみたが、なかなかうまく行かなかった。githubのpull requestsの所を見たら、既に他の人がfirefox9の対応するものを作った。２０００行以上修正した。これを使えば、うまく動けるようになった。</p>

<p>https://github.com/sibrahim/xmpp4moz</p>

<h4>通信速度</h4>

<p>Google Talkの利用はまだできてない。XMPPの対応は少し違うので、その部分を修正する必要がある。</p>

<h3>論文</h3>

<p>書いている。前の金子さんの修士論文をちょっと参考したい。PDF版がほしい。</p>

<h3>OS研究会</h3>

<p>スライドを完成した。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FriendSocketの暗号化]]></title>
    <link href="http://guofei.github.com/master_report/blog/2012/11/19/friendsocketfalsean-hao-hua/"/>
    <updated>2012-11-19T15:46:00+09:00</updated>
    <id>http://guofei.github.com/master_report/blog/2012/11/19/friendsocketfalsean-hao-hua</id>
    <content type="html"><![CDATA[<h3>FriendSocketの暗号化</h3>

<p>friendsocketはmac上のfirefox3.6で開発し、暗号化の部分はlinux上のfirefox(>10)開発した</p>

<p>暗号化の部分はfirefoxが提供したjsctypeで開発したが、対応するバージョンが少ない。<br/>
そして、鍵を一回読んで暗号化と復号化を行っている。鍵を使わない時、javascript側でメーモリを解放する必要がある</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">key</span> <span class="o">=</span> <span class="nx">load_pub_key</span><span class="p">(</span><span class="s2">&quot;path/public.pem&quot;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">data1</span> <span class="o">=</span> <span class="nx">encrypt</span><span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="s2">&quot;hello1&quot;</span><span class="p">)</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">data2</span> <span class="o">=</span> <span class="nx">encrypt</span><span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="s2">&quot;hello2&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nx">free_key</span><span class="p">(</span><span class="nx">key</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>今はnpapiで書き直しした</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">pub</span> <span class="o">=</span> <span class="nx">plugin</span><span class="p">.</span><span class="nx">load_public_key</span><span class="p">(</span><span class="s2">&quot;/path/public.pem&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nx">alert</span><span class="p">(</span><span class="nx">pub</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">pri</span> <span class="o">=</span> <span class="nx">plugin</span><span class="p">.</span><span class="nx">load_private_key</span><span class="p">(</span><span class="s2">&quot;/path/private.pem&quot;</span><span class="p">,</span> <span class="s2">&quot;12345678&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nx">alert</span><span class="p">(</span><span class="nx">pri</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">ciphertext</span> <span class="o">=</span> <span class="nx">plugin</span><span class="p">.</span><span class="nx">encrypt</span><span class="p">(</span><span class="nx">pub</span><span class="p">,</span> <span class="s2">&quot;abc&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nx">alert</span><span class="p">(</span><span class="nx">ciphertext</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">text</span> <span class="o">=</span> <span class="nx">plugin</span><span class="p">.</span><span class="nx">decrypt</span><span class="p">(</span><span class="nx">pri</span><span class="p">,</span> <span class="nx">ciphertext</span><span class="p">);</span>
</span><span class='line'><span class="nx">alert</span><span class="p">(</span><span class="nx">text</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>プラグインのインスタンスを起動する時、鍵をロードする。プラグインのインスタンスが消える時、鍵を解放する。今はlinuxのchromeとfirefox（firefox9と16）の両方で動けるようになった。<br/>
しかし、firefox3.6で動けない。</p>

<p>mac版にしたら、firefox9で動けたが、firefox3.6でも動けない。</p>

<p>以下の二つの条件の一つを満たさなければならない<br/>
プラグインをfirefox3.6で動く<br/>
xmppのアドオンをfirefox9以上で動く</p>

<h3>OS研究会</h3>

<p>OS研究会のスライド</p>

<p>論文</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FriendSocket]]></title>
    <link href="http://guofei.github.com/master_report/blog/2012/11/12/friendsocket/"/>
    <updated>2012-11-12T14:03:00+09:00</updated>
    <id>http://guofei.github.com/master_report/blog/2012/11/12/friendsocket</id>
    <content type="html"><![CDATA[<h3>FriendSocketのコンタクトリスト問題の修正</h3>

<p>前はeventでコンタクトリストを取得した</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">s</span><span class="p">.</span><span class="nx">on_get_friend</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">list</span><span class="p">){};</span>
</span></code></pre></td></tr></table></div></figure>


<p>少し不便だと思って、以下のようにした</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">s</span> <span class="o">=</span> <span class="nx">friendsocketio</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="nx">host</span><span class="p">,</span> <span class="nx">name</span><span class="p">,</span> <span class="nx">password</span><span class="p">,</span> <span class="nx">appname</span><span class="p">);</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">list</span> <span class="o">=</span> <span class="nx">s</span><span class="p">.</span><span class="nx">contactlist</span><span class="p">();</span>
</span><span class='line'>    <span class="nx">s</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;connection&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">friend</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>しかし、xmppからのデータがいつに来るかどうかわからないので、listがほとんど何にも取得できない</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'>     <span class="nx">xmpp</span>                       <span class="nx">friendsocket</span>
</span><span class='line'>      <span class="o">|</span>                             <span class="o">|</span>
</span><span class='line'>      <span class="o">|</span>                             <span class="o">|</span>
</span><span class='line'>   <span class="nx">onlogined</span>                        <span class="o">|</span>
</span><span class='line'>      <span class="o">|</span>                             <span class="o">|</span>
</span><span class='line'>      <span class="o">|</span>          <span class="nx">list</span>               <span class="o">|</span>
</span><span class='line'>   <span class="nx">ongetlist</span>    <span class="o">------&gt;</span>             <span class="o">|</span>
</span><span class='line'>      <span class="o">|</span>                             <span class="o">|</span><span class="nx">s</span><span class="p">.</span><span class="nx">contactlist</span> <span class="o">=</span> <span class="nx">list</span>
</span><span class='line'>      <span class="o">|</span>                             <span class="o">|</span>
</span><span class='line'>   <span class="nx">onconnectmessage</span>       <span class="o">---&gt;</span>      <span class="o">|</span>
</span><span class='line'>                              <span class="nx">onconnect</span>
</span></code></pre></td></tr></table></div></figure>


<p>以下のように書かなければならない</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">s</span> <span class="o">=</span> <span class="nx">friendsocketio</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="nx">host</span><span class="p">,</span> <span class="nx">name</span><span class="p">,</span> <span class="nx">password</span><span class="p">,</span> <span class="nx">appname</span><span class="p">);</span>
</span><span class='line'><span class="nx">s</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;connection&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">friend</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">list</span> <span class="o">=</span> <span class="nx">s</span><span class="p">.</span><span class="nx">contactlist</span><span class="p">();</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h3>os研究会</h3>

<p>プレゼンテーションを作っている。しかし、今回は２人分のものを発表するので、青沼さんの研究内容どういう風に発表すればいいかわからない。青沼さんのcsセミナーのものを使えるかどうか。発表内容のページごとに誰の研究かをきちんと区別する必要があるか。</p>

<h3>来週</h3>

<p>friendsocketの暗号化の部分と組み合わせる。<br/>
発表内容を書く。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FriendSocketをweb pageからの利用]]></title>
    <link href="http://guofei.github.com/master_report/blog/2012/11/05/friendsocketwoweb-pagekarafalseli-yong/"/>
    <updated>2012-11-05T15:04:00+09:00</updated>
    <id>http://guofei.github.com/master_report/blog/2012/11/05/friendsocketwoweb-pagekarafalseli-yong</id>
    <content type="html"><![CDATA[<h3>webページから利用できるようになった</h3>

<p>カスタム DOM イベントを利用する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;path/to/callextension.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script&gt;</span>
</span><span class='line'><span class="nx">client_test</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">friend</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">friend</span> <span class="o">=</span> <span class="nx">friendsocketio</span><span class="p">.</span><span class="nx">connect</span><span class="p">(</span><span class="nx">host</span><span class="p">,</span> <span class="s2">&quot;client@kaku-desktop.softlab.cs.tsukuba.ac.jp&quot;</span><span class="p">,</span> <span class="s2">&quot;client&quot;</span><span class="p">,</span> <span class="s2">&quot;server@kaku-desktop.softlab.cs.tsukuba.ac.jp&quot;</span><span class="p">,</span> <span class="s2">&quot;app2&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">friend</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;connect&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">friend</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="s2">&quot;event&quot;</span><span class="p">,</span> <span class="s2">&quot;hello server 2&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="nx">friend</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;disconnect&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;disconnected by server&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="nx">CallExtension</span><span class="p">(</span><span class="nx">client_test</span><span class="p">);</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>callextension.js</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">function</span> <span class="nx">CallExtension</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">element</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;MyExtensionDataElement&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">element</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;attribute1&quot;</span><span class="p">,</span> <span class="nx">f</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">element</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;attribute2&quot;</span><span class="p">,</span> <span class="s2">&quot;hello world&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">element</span><span class="p">);</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">evt</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createEvent</span><span class="p">(</span><span class="s2">&quot;Events&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">evt</span><span class="p">.</span><span class="nx">initEvent</span><span class="p">(</span><span class="s2">&quot;MyExtensionEvent&quot;</span><span class="p">,</span> <span class="kc">true</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">element</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="p">(</span><span class="nx">evt</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>問題</h4>

<p>アドオン側でclienttest関数の文字列を取得し、eval()で実行している。普通のJavaScriptで実行できないもの（アドオンの機能など）をclienttest()で書いてアドオンに送ると実行出来るようになる。さらに、XPCOMのモジュールのコードをclienttest関数で書いて、アドオンに送ると、ファイルなどのアクセスも出来る。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OS研究会論文]]></title>
    <link href="http://guofei.github.com/master_report/blog/2012/10/29/osyan-jiu-hui-lun-wen/"/>
    <updated>2012-10-29T13:37:00+09:00</updated>
    <id>http://guofei.github.com/master_report/blog/2012/10/29/osyan-jiu-hui-lun-wen</id>
    <content type="html"><![CDATA[<h3>論文</h3>

<p>FriendSocketのAPIの説面を追加した。暗号化の部分を少し追加した。</p>

<p>動画協調アプリケーションとミドルウェアの部分が青沼さんが追加している</p>

<table border=1>
<caption>FriendSocket API</caption>
<tr><td>関数</td><td>説明</td></tr>
<tr><td>frinedsocketio.connect()</td><td>サーバに接続する準備を行い、friendsocketclientオブジェクトを生成する。</td></tr>
<tr><td>frinedsocketio.listen()</td><td>クライアントからの接続を待ち、friendsocketserverオブジェクトを生成する。frinedsocketio.listen().friendsで friendsocketserverオブジェクトの取得する</td></tr>
</table>




<br>




<table border=1>
<caption>friendsocketclientオブジェクトのメッソド</caption>
<tr><td>メソッド</td><td>説明</td></tr>
<tr><td>on(e,f)</td><td>イベントを追加する。eはイベント名、fはcallbackの関数である。callback関数の引数は受信したデータである。</td></tr>
<tr><td>emit(e,d)</td><td>サーバに送信する、eはイベント名、dは送信したいデータの文字列である</td></tr>
<tr><td>close()</td><td>クライアントをcloseする</td></tr>
</table>




<br>




<table border=1>
<caption>friendsocketserverオブジェクトのメッソド</caption>
<tr><td>メソッド</td><td>説明</td></tr>
<tr><td>on(&#8220;connection&#8221;,f)</td><td>サーバに接続した時、callbackの関数fを呼び出す。引数はfriendsocketオブジェクトである</td></tr>
<tr><td>emit(e,d)</td><td>接続する全てのクライアントに送信する。</td></tr>
<tr><td>close(friend)</td><td>クライアントからの接続を切る。引数はconnectionの時に取得したfriendsocketオブジェクトである</td></tr>
</table>




<br>




<table border=1>
<caption>friendsocketオブジェクトのメッソド</caption>
<tr><td>メソッド</td><td>説明</td></tr>
<tr><td>on(&#8220;disconnect&#8221;,f)</td><td>クライアントからの接続が切られた時、callback関数を呼び出す</td></tr>
<tr><td>on(e,f)</td><td>イベントを追加する。eはイベント名、fはcallbackの関数である。callback関数の引数は受信したデータである</td></tr>
<tr><td>emit(e,d)</td><td>クライアントに送信する。eはイベント名、dは送信したいデータの文字列である</td></tr>
</table>


<h3>FriendSocket APIのbugの修正</h3>

<p>クライアント側から同じuserとappnameでサーバに接続すると、サーバ側が１回送信したのに、クライアント側は何回も受信する。</p>

<p>毎回クライアントを起動すると、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">channel</span> <span class="o">=</span> <span class="nx">XMPP</span><span class="p">.</span><span class="nx">createChannel</span><span class="p">();</span>
</span><span class='line'><span class="nx">channel</span><span class="p">.</span><span class="nx">on</span><span class="p">({</span><span class="nx">event</span><span class="o">:</span> <span class="s1">&#39;message&#39;</span><span class="p">,</span> <span class="nx">direction</span><span class="o">:</span> <span class="s1">&#39;in&#39;</span><span class="p">,</span> <span class="nx">stanza</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">stanza</span><span class="p">)</span> <span class="p">{</span><span class="k">return</span> <span class="nx">stanza</span><span class="p">.</span><span class="err">@</span><span class="nx">appname</span> <span class="o">==</span> <span class="nx">appanme</span><span class="p">}},</span> <span class="nx">handleIncomingMessage</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>クライアント側でchannelをreleaseしないと、channelがずっとメッセージの受信を受けっている。closeの時、releaseしたら、bugを修正した</p>

<h3>暗号化の部分</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">RSA</span> <span class="o">*</span><span class="n">PEM_read_RSAPublicKey</span><span class="p">(</span><span class="kt">FILE</span> <span class="o">*</span><span class="n">fp</span><span class="p">,</span> <span class="n">RSA</span> <span class="o">**</span><span class="n">x</span><span class="p">,</span> <span class="n">pem_password_cb</span> <span class="o">*</span><span class="n">cb</span><span class="p">,</span> <span class="kt">void</span> <span class="o">*</span><span class="n">u</span><span class="p">);</span>
</span><span class='line'><span class="n">RSA</span> <span class="o">*</span><span class="n">PEM_read_PublicKey</span><span class="p">(</span><span class="kt">FILE</span> <span class="o">*</span><span class="n">fp</span><span class="p">,</span> <span class="n">EVP_PKEY</span> <span class="o">**</span><span class="n">x</span><span class="p">,</span> <span class="n">pem_password_cb</span> <span class="o">*</span><span class="n">cb</span><span class="p">,</span> <span class="kt">void</span> <span class="o">*</span><span class="n">u</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>cbをNULLとして渡し、パースワードを直接uに入れたら鍵を読めるようになった。</p>

<p>opensslのソースコードを検索したらcallback引数のところ、(pem_password_cb *)でキャストしている。</p>

<figure class='code'><figcaption><span>pem_password_cb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">typedef</span> <span class="kt">int</span> <span class="n">pem_password_cb</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">buf</span><span class="p">,</span> <span class="kt">int</span> <span class="n">size</span><span class="p">,</span> <span class="kt">int</span> <span class="n">rwflag</span><span class="p">,</span> <span class="kt">void</span> <span class="o">*</span><span class="n">userdata</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="err">修正前</span>
</span><span class='line'><span class="n">key</span> <span class="o">=</span> <span class="n">PEM_read_RSAPrivateKey</span><span class="p">(</span><span class="n">fp</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="n">pass_cb</span><span class="p">,</span> <span class="s">&quot;My Private Key&quot;</span><span class="p">);</span>
</span><span class='line'><span class="err">修正後</span>
</span><span class='line'><span class="n">key</span> <span class="o">=</span> <span class="n">PEM_read_RSAPrivateKey</span><span class="p">(</span><span class="n">fp</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="p">(</span><span class="n">pem_password_cb</span> <span class="o">*</span><span class="p">)</span><span class="n">pass_cb</span><span class="p">,</span> <span class="s">&quot;My Private Key&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>しかし、まだ</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">key</span> <span class="o">=</span> <span class="n">PEM_read_RSAPrivateKey</span><span class="p">(</span><span class="n">fp</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="n">pass_cb</span><span class="p">,</span> <span class="s">&quot;My Private Key&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>に戻したら、うまく実行できた</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OS研究会論文]]></title>
    <link href="http://guofei.github.com/master_report/blog/2012/10/23/osyan-jiu-hui-lun-wen/"/>
    <updated>2012-10-23T13:32:00+09:00</updated>
    <id>http://guofei.github.com/master_report/blog/2012/10/23/osyan-jiu-hui-lun-wen</id>
    <content type="html"><![CDATA[<h3>面接</h3>

<p>難しかった</p>

<p>日本でどのぐらい働きたいと聞かれて、５年ぐらいと答えると、５年間でせっかく人材として育ったのに、会社をやめるのはよくない</p>

<p>分散OSの話もあって、自分は分散OSが難しいですと話したら、どこが難しいと聞かれた。</p>

<h3>論文</h3>

<p>９章＝＞７章</p>

<p>元の画像は見づらいので、ソースコードを画像からテキストに変えた<br/>
実装をそれぞれの章に入れた</p>

<p>これからやるところ：<br/>
関連研究のところにBrowser DBusを追加<br/>
暗号化の部分を追加<br/>
動画アプリケーションの話</p>

<h3>暗号化</h3>

<p>鍵を読み込む時、パスフレーズの取得方法がわからない</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">int</span> <span class="n">PEM_write_RSAPrivateKey</span><span class="p">(</span><span class="kt">FILE</span> <span class="o">*</span><span class="n">fp</span><span class="p">,</span> <span class="n">RSA</span> <span class="o">*</span><span class="n">x</span><span class="p">,</span>
</span><span class='line'>                            <span class="k">const</span> <span class="n">EVP_CIPHER</span> <span class="o">*</span><span class="n">enc</span><span class="p">,</span> <span class="c1">//暗号化アルゴリズム</span>
</span><span class='line'>                          <span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">kstr</span><span class="p">,</span> <span class="kt">int</span> <span class="n">klen</span><span class="p">,</span> <span class="c1">//パスフレーズと長さ</span>
</span><span class='line'>                          <span class="n">pem_password_cb</span> <span class="o">*</span><span class="n">cb</span><span class="p">,</span> <span class="kt">void</span> <span class="o">*</span><span class="n">u</span><span class="p">);</span> <span class="c1">//callback</span>
</span><span class='line'><span class="n">PEM_write_RSAPrivateKey</span><span class="p">(</span><span class="n">seckey</span><span class="p">,</span> <span class="n">key</span><span class="p">,</span> <span class="n">EVP_des_ede3_cbc</span><span class="p">(),</span> <span class="s">&quot;12345678&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'><span class="n">PEM_write_RSAPrivateKey</span><span class="p">(</span><span class="n">seckey</span><span class="p">,</span> <span class="n">key</span><span class="p">,</span> <span class="n">EVP_des_ede3_cbc</span><span class="p">(),</span> <span class="nb">NULL</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">pass_cb</span><span class="p">,</span> <span class="s">&quot;My Private Key&quot;</span><span class="p">);</span>
</span><span class='line'><span class="err">下のような鍵が生成される</span>
</span><span class='line'><span class="o">-----</span><span class="n">BEGIN</span> <span class="n">RSA</span> <span class="n">PRIVATE</span> <span class="n">KEY</span><span class="o">-----</span>
</span><span class='line'><span class="n">Proc</span><span class="o">-</span><span class="n">Type</span><span class="o">:</span> <span class="mi">4</span><span class="p">,</span><span class="n">ENCRYPTED</span>
</span><span class='line'><span class="n">DEK</span><span class="o">-</span><span class="n">Info</span><span class="o">:</span> <span class="n">DES</span><span class="o">-</span><span class="n">EDE3</span><span class="o">-</span><span class="n">CBC</span><span class="p">,</span><span class="mi">81</span><span class="n">CB5FEC487EB67F</span>
</span><span class='line'><span class="n">Ux3JFs0KSohF1GYs0rJ2VtQ</span><span class="o">+</span><span class="n">s5pjXJVsjPktIh9PzU</span><span class="o">+</span><span class="n">XLTAEOWdyWR</span><span class="o">/</span><span class="mf">3f</span><span class="n">E5</span><span class="o">+</span><span class="n">hgZK</span>
</span><span class='line'><span class="p">......</span>
</span><span class='line'><span class="n">EUPfsZzEF2no</span><span class="o">/</span><span class="n">EMs6aCj5AdpJQu0PgHPU4oZmjTW0LU</span><span class="o">=</span>
</span><span class='line'><span class="o">-----</span><span class="n">END</span> <span class="n">RSA</span> <span class="n">PRIVATE</span> <span class="n">KEY</span><span class="o">-----</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">RSA</span> <span class="o">*</span><span class="n">PEM_read_RSAPublicKey</span><span class="p">(</span><span class="kt">FILE</span> <span class="o">*</span><span class="n">fp</span><span class="p">,</span> <span class="n">RSA</span> <span class="o">**</span><span class="n">x</span><span class="p">,</span> <span class="n">pem_password_cb</span> <span class="o">*</span><span class="n">cb</span><span class="p">,</span> <span class="kt">void</span> <span class="o">*</span><span class="n">u</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">int</span> <span class="n">pass_cb</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">buf</span><span class="p">,</span> <span class="kt">int</span> <span class="n">size</span><span class="p">,</span> <span class="kt">int</span> <span class="n">rwflag</span><span class="p">,</span> <span class="kt">void</span> <span class="o">*</span><span class="n">u</span><span class="p">);</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">len</span><span class="p">;</span>
</span><span class='line'>      <span class="kt">char</span> <span class="o">*</span><span class="n">tmp</span><span class="p">;</span>
</span><span class='line'>      <span class="cm">/* We&#39;d probably do something else if &#39;rwflag&#39; is 1 */</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Enter pass phrase for </span><span class="se">\&quot;</span><span class="s">%s</span><span class="se">\&quot;\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">u</span><span class="p">);</span>
</span><span class='line'>      <span class="cm">/* get pass phrase, length &#39;len&#39; into &#39;tmp&#39; */</span>
</span><span class='line'>      <span class="n">tmp</span> <span class="o">=</span> <span class="s">&quot;hello&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="n">len</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">tmp</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">len</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>      <span class="cm">/* if too long, truncate */</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">len</span> <span class="o">&gt;</span> <span class="n">size</span><span class="p">)</span> <span class="n">len</span> <span class="o">=</span> <span class="n">size</span><span class="p">;</span>
</span><span class='line'>      <span class="n">memcpy</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="n">tmp</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">len</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">key</span> <span class="o">=</span> <span class="n">PEM_read_RSAPrivateKey</span><span class="p">(</span><span class="n">fp</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="n">pass_cb</span><span class="p">,</span> <span class="s">&quot;My Private Key&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[コンピュータシステムシンポジウム論文]]></title>
    <link href="http://guofei.github.com/master_report/blog/2012/10/15/konpiyutasisutemusinpoziumulun-wen/"/>
    <updated>2012-10-15T02:08:00+09:00</updated>
    <id>http://guofei.github.com/master_report/blog/2012/10/15/konpiyutasisutemusinpoziumulun-wen</id>
    <content type="html"><![CDATA[<h3>論文</h3>

<p>７ページ書いた</p>

<ol>
<li>はじめに</li>
<li>現在の分散型ブラウザの通信機能と問題点</li>
<li>複数の IMS や SNS の利用</li>
<li>FriendSocket</li>
<li>グループ通信を実現するミドルウェア</li>
<li>協調動画視聴アプリケーション</li>
<li>実 装</li>
<li>関連研究</li>
<li>おわりに</li>
</ol>


<h3>Friendsocket API</h3>

<p>サーバ側にクリックすると、クライアントに一括送信するプログラム</p>

<p>クライアント</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">client</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">friend</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">friend</span> <span class="o">=</span> <span class="nx">friendsocketio</span><span class="p">.</span><span class="nx">connect</span><span class="p">(</span><span class="nx">name</span><span class="p">,</span> <span class="nx">password</span><span class="p">,</span> <span class="nx">peername</span><span class="p">,</span> <span class="nx">appname</span><span class="p">,</span> <span class="nx">host</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">friend</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;connect&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nx">friend</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;clicked&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                                <span class="nx">do_something</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span>
</span><span class='line'>                            <span class="p">});</span>
</span><span class='line'>              <span class="p">});</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="nx">client</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>サーバ</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">friend_list</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">List</span><span class="p">();</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">server</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">s</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">s</span> <span class="o">=</span> <span class="nx">friendsocketio</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="nx">name</span><span class="p">,</span> <span class="nx">password</span><span class="p">,</span> <span class="nx">appname</span><span class="p">,</span> <span class="nx">host</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">s</span><span class="p">.</span><span class="nx">friends</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;connection&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">friend</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                          <span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">contactlist</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">friend</span><span class="p">.</span><span class="nx">name</span><span class="p">))</span>
</span><span class='line'>                              <span class="nx">friend_list</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">friend</span><span class="p">);</span>
</span><span class='line'>                 <span class="p">});</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">sendMsg</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">friend</span><span class="p">,</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">len</span><span class="p">;</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">len</span> <span class="o">=</span> <span class="nx">friend_list</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">len</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">friend</span> <span class="o">=</span> <span class="nx">friend_list</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
</span><span class='line'>        <span class="nx">friend</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="s2">&quot;clicked&quot;</span><span class="p">,</span> <span class="s2">&quot;clicked&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">el</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nx">el</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;Click&quot;</span><span class="p">,</span> <span class="nx">sendMsg</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span>
</span><span class='line'><span class="nx">server</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<h3>ほかの人から聞かれた問題</h3>

<p>XMPPの通信路を利用するらな、XMPPの中央サーバを利用しなければならない。前に話した中央を利用しないことと矛盾になる？</p>

<p>分散型ブラウザの通信機能はxmppだけではなく、Skypeも利用できる。skypeを使うと、中央サーバを使わない。FriendSocketもskypeの利用を実装つもりだが、やる人足りない。xmppのほうは中央サーバを使うが、全部暗号化する。</p>

<h3>来週</h3>

<p>22日面接がある。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[plugin and addon debug]]></title>
    <link href="http://guofei.github.com/master_report/blog/2012/10/02/plugin-and-addon-debug/"/>
    <updated>2012-10-02T10:52:00+09:00</updated>
    <id>http://guofei.github.com/master_report/blog/2012/10/02/plugin-and-addon-debug</id>
    <content type="html"><![CDATA[<h3>gdbでpluginをdebug</h3>

<ol>
<li>chromeを立ち上げる時、</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>/usr/bin/google-chrome --plugin-launcher<span class="o">=</span><span class="s1">&#39;xterm -e gdb --args&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>pluginをロードするページを開く</li>
<li>GDB付きのxterm windowが出てきて、そのwindowで.soのファイルをロードし、直接Debugできる。</li>
</ol>


<p>例：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>/usr/bin/google-chrome --plugin-launcher<span class="o">=</span><span class="s1">&#39;xterm -e gdb --args&#39;</span>
</span><span class='line'>directory ~/path/to/npapi-sdk/samples/unix-basic/
</span><span class='line'>breakpoint
</span><span class='line'>start あるいは　run
</span></code></pre></td></tr></table></div></figure>


<h3>chromebugでaddonをdebug</h3>

<ol>
<li>同じバージョンchromebug+firebugをインストール</li>
<li>./firefox-bin –chromebugで実行すると、デバッグモードに入れる.(/Applications/Firefox 3.6.app/Contents/MacOS/firefox-bin)</li>
<li>breakpointなどを設定できるし、マウスを変数名に指すと、値が出力してくれる。結構使いやすい</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Friendsocket APIの修正]]></title>
    <link href="http://guofei.github.com/master_report/blog/2012/10/01/friendsocket-apifalsexiu-zheng/"/>
    <updated>2012-10-01T14:16:00+09:00</updated>
    <id>http://guofei.github.com/master_report/blog/2012/10/01/friendsocket-apifalsexiu-zheng</id>
    <content type="html"><![CDATA[<h3>Socket IOに似たようなAPIを書き換えた</h3>

<p>socket io</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">socket</span> <span class="o">=</span> <span class="nx">io</span><span class="p">.</span><span class="nx">connect</span><span class="p">(</span><span class="s1">&#39;http://localhost&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">socket</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;news&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
</span><span class='line'>        <span class="nx">socket</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="s1">&#39;my other event&#39;</span><span class="p">,</span> <span class="p">{</span> <span class="nx">my</span><span class="o">:</span> <span class="s1">&#39;data&#39;</span> <span class="p">});</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="nx">io</span><span class="p">.</span><span class="nx">sockets</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;connection&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">socket</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">socket</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="s1">&#39;news&#39;</span><span class="p">,</span> <span class="p">{</span> <span class="nx">hello</span><span class="o">:</span> <span class="s1">&#39;world&#39;</span> <span class="p">});</span>
</span><span class='line'>    <span class="nx">socket</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;my other event&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>friendsocket</p>

<p>クライアントのイベント：connect</p>

<p>サーバのイベント:connection,disconnect</p>

<p>複数のクライアントからの接続</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">client_test1_1</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">friend</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">friend</span> <span class="o">=</span> <span class="nx">friendsocketio</span><span class="p">.</span><span class="nx">connect</span><span class="p">(</span><span class="s2">&quot;client@kaku-desktop.softlab.cs.tsukuba.ac.jp&quot;</span><span class="p">,</span> <span class="s2">&quot;client&quot;</span><span class="p">,</span> <span class="s2">&quot;server@kaku-desktop.softlab.cs.tsukuba.ac.jp&quot;</span><span class="p">,</span> <span class="s2">&quot;app1&quot;</span><span class="p">,</span> <span class="s2">&quot;kaku-desktop.softlab.cs.tsukuba.ac.jp&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">friend</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;connect&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">friend</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;all&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">alert</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>        <span class="nx">friend</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="s2">&quot;event&quot;</span><span class="p">,</span> <span class="s2">&quot;hello server 1&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="nx">client_test1_2</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">friend</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">friend</span> <span class="o">=</span> <span class="nx">friendsocketio</span><span class="p">.</span><span class="nx">connect</span><span class="p">(</span><span class="s2">&quot;client2@kaku-desktop.softlab.cs.tsukuba.ac.jp&quot;</span><span class="p">,</span> <span class="s2">&quot;client2&quot;</span><span class="p">,</span> <span class="s2">&quot;server@kaku-desktop.softlab.cs.tsukuba.ac.jp&quot;</span><span class="p">,</span> <span class="s2">&quot;app1&quot;</span><span class="p">,</span> <span class="s2">&quot;kaku-desktop.softlab.cs.tsukuba.ac.jp&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="c1">//接続が行った時</span>
</span><span class='line'>    <span class="nx">friend</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;connect&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">//&quot;all&quot;イベントを作成</span>
</span><span class='line'>        <span class="nx">friend</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;all&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">alert</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="nx">server_test1</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">server</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">server</span> <span class="o">=</span> <span class="nx">friendsocketio</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="s2">&quot;server@kaku-desktop.softlab.cs.tsukuba.ac.jp&quot;</span><span class="p">,</span> <span class="s2">&quot;server&quot;</span><span class="p">,</span> <span class="s2">&quot;app1&quot;</span><span class="p">,</span> <span class="s2">&quot;kaku-desktop.softlab.cs.tsukuba.ac.jp&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="c1">//server.on(&quot;connection&quot;, function(friend)){}のほうが良い？？</span>
</span><span class='line'>    <span class="nx">server</span><span class="p">.</span><span class="nx">friends</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;connection&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">friend</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">//&quot;event&quot;イベントを作成</span>
</span><span class='line'>        <span class="nx">friend</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;event&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span> <span class="nx">name</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">//全てのユーザに送信</span>
</span><span class='line'>            <span class="nx">server</span><span class="p">.</span><span class="nx">friends</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="s2">&quot;all&quot;</span><span class="p">,</span> <span class="s2">&quot;hello everyone&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="nx">alert</span><span class="p">(</span><span class="nx">name</span><span class="p">);</span>
</span><span class='line'>            <span class="nx">alert</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>複数のサーバを起動する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">client_test2</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">friend</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">friend</span> <span class="o">=</span> <span class="nx">friendsocketio</span><span class="p">.</span><span class="nx">connect</span><span class="p">(</span><span class="s2">&quot;client@kaku-desktop.softlab.cs.tsukuba.ac.jp&quot;</span><span class="p">,</span> <span class="s2">&quot;client&quot;</span><span class="p">,</span> <span class="s2">&quot;server@kaku-desktop.softlab.cs.tsukuba.ac.jp&quot;</span><span class="p">,</span> <span class="s2">&quot;app2&quot;</span><span class="p">,</span> <span class="s2">&quot;kaku-desktop.softlab.cs.tsukuba.ac.jp&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">friend</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;connect&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">friend</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="s2">&quot;event&quot;</span><span class="p">,</span> <span class="s2">&quot;hello server 2&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="c1">//close</span>
</span><span class='line'>        <span class="nx">friend</span><span class="p">.</span><span class="nx">close</span><span class="p">();</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="nx">server_test2</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">server</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">server</span> <span class="o">=</span> <span class="nx">friendsocketio</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="s2">&quot;server@kaku-desktop.softlab.cs.tsukuba.ac.jp&quot;</span><span class="p">,</span> <span class="s2">&quot;server&quot;</span><span class="p">,</span> <span class="s2">&quot;app2&quot;</span><span class="p">,</span> <span class="s2">&quot;kaku-desktop.softlab.cs.tsukuba.ac.jp&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">server</span><span class="p">.</span><span class="nx">friends</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;connection&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">friend</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">friend</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;event&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span> <span class="nx">name</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">alert</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
</span><span class='line'>            <span class="nx">alert</span><span class="p">(</span><span class="nx">name</span><span class="p">);</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>        <span class="c1">//接続が切れた時</span>
</span><span class='line'>        <span class="nx">friend</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;disconnect&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;user disconnected&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<h3>環境</h3>

<h4>firefox 3.6,xmpp4moz</h4>

<p>voyagerの/Users/kaku/Public/firefox 3.6 linux mac xmpp4moz/</p>

<h4>xmppサーバ</h4>

<p>研究室の中しかアクセスできないxmppサーバをたてた。</p>

<p>username:client@kaku-desktop.softlab.cs.tsukuba.ac.jp password:client<br/>
username:client2@&#8230;, password:client2<br/>
username:server@&#8230;, password:server など</p>

<p>管理画面：
http://kaku-desktop.softlab.cs.tsukuba.ac.jp:9090/</p>

<p>ユーザ名：admin　パースワード:admin</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[暗号化]]></title>
    <link href="http://guofei.github.com/master_report/blog/2012/09/24/an-hao-hua/"/>
    <updated>2012-09-24T16:21:00+09:00</updated>
    <id>http://guofei.github.com/master_report/blog/2012/09/24/an-hao-hua</id>
    <content type="html"><![CDATA[<h3>javascriptでの暗号化</h3>

<p>前は文字列を渡して暗号化を行う</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">char</span><span class="o">*</span> <span class="n">private_decrypt</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">prikey</span><span class="p">,</span> <span class="kt">int</span> <span class="n">key_len</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">from</span><span class="p">,</span> <span class="kt">int</span> <span class="n">from_len</span><span class="p">);</span>
</span><span class='line'><span class="kt">char</span><span class="o">*</span> <span class="n">public_encrypt</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">pubkey</span><span class="p">,</span> <span class="kt">int</span> <span class="n">key_len</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">from</span><span class="p">,</span> <span class="kt">int</span> <span class="n">from_len</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>ファイル名を指定して、暗号化を行う。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">char</span><span class="o">*</span> <span class="n">public_encrypt</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">file</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">from</span><span class="p">,</span> <span class="kt">int</span> <span class="n">data_len</span><span class="p">);</span>
</span><span class='line'><span class="kt">char</span><span class="o">*</span> <span class="n">private_decrypt</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">file</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">from</span><span class="p">,</span> <span class="kt">int</span> <span class="n">data_len</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">typedef</span> <span class="k">enum</span> <span class="p">{</span> <span class="n">PRIVATE_KEY</span> <span class="p">,</span> <span class="n">PUBLIC_KEY</span> <span class="p">}</span> <span class="n">KeyType</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">RSA</span> <span class="o">*</span><span class="nf">read_rsa_key_from_file</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">file</span><span class="p">,</span> <span class="n">KeyType</span> <span class="n">type</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>        <span class="kt">FILE</span> <span class="o">*</span><span class="n">fp</span> <span class="o">=</span> <span class="n">fopen</span><span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="s">&quot;r&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">fp</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">){</span>
</span><span class='line'>                <span class="n">perror</span><span class="p">(</span><span class="n">file</span><span class="p">);</span>
</span><span class='line'>                <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">RSA</span> <span class="o">*</span><span class="n">key</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">type</span> <span class="o">==</span> <span class="n">PUBLIC_KEY</span><span class="p">)</span>
</span><span class='line'>                <span class="n">key</span> <span class="o">=</span> <span class="n">PEM_read_RSAPublicKey</span><span class="p">(</span><span class="n">fp</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">type</span> <span class="o">==</span> <span class="n">PRIVATE_KEY</span><span class="p">)</span>
</span><span class='line'>                <span class="n">key</span> <span class="o">=</span> <span class="n">PEM_read_RSAPrivateKey</span><span class="p">(</span><span class="n">fp</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">fclose</span><span class="p">(</span><span class="n">fp</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">key</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">){</span>
</span><span class='line'>                <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;failed to read key&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">key</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">free_rsa_key</span><span class="p">(</span><span class="n">RSA</span> <span class="o">*</span><span class="n">key</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>        <span class="n">RSA_free</span><span class="p">(</span><span class="n">key</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">generate_rsa_key_to_file</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">path</span><span class="p">,</span> <span class="kt">int</span> <span class="n">size</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>        <span class="n">RSA</span> <span class="o">*</span><span class="n">key</span> <span class="o">=</span> <span class="n">RSA_generate_key</span><span class="p">(</span><span class="n">size</span><span class="p">,</span> <span class="mi">65537</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">key</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">){</span>
</span><span class='line'>                <span class="n">print_error</span><span class="p">(</span><span class="s">&quot;generate key&quot;</span><span class="p">,</span> <span class="n">ERR_get_error</span><span class="p">());</span>
</span><span class='line'>                <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">write_public_key</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="n">key</span><span class="p">))</span>
</span><span class='line'>                <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">write_private_key</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="n">key</span><span class="p">))</span>
</span><span class='line'>                <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">RSA_free</span><span class="p">(</span><span class="n">key</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>毎回ファイルを読まなければならない</p>

<p>外部でグローバルの変数を用意しているところ</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">typedef</span> <span class="k">struct</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">RSA</span> <span class="o">*</span><span class="n">my_private</span><span class="p">;</span>
</span><span class='line'>        <span class="n">RSA</span> <span class="o">*</span><span class="n">my_public</span><span class="p">;</span>
</span><span class='line'>        <span class="n">RSA</span> <span class="o">**</span><span class="n">publics</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">char</span> <span class="o">**</span><span class="n">key_ids</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">char</span> <span class="o">**</span><span class="n">key_path</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">size_t</span> <span class="n">n_public</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span><span class="n">KEYS</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">KEYS</span> <span class="n">keys</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">extern</span> <span class="n">RSA</span> <span class="o">*</span><span class="n">get_my_private_key</span><span class="p">(</span><span class="n">keys</span><span class="p">);</span>
</span><span class='line'><span class="k">extern</span> <span class="n">RSA</span> <span class="o">*</span><span class="n">get_my_public_key</span><span class="p">(</span><span class="n">keys</span><span class="p">);</span>
</span><span class='line'><span class="k">extern</span> <span class="n">RSA</span> <span class="o">*</span><span class="n">get_publib_key_from_id</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">id</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>暗号化の手順は</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">get_all_keys</span><span class="p">();</span>
</span><span class='line'><span class="n">public_encrypt</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">key_id</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">from</span><span class="p">,</span> <span class="kt">int</span> <span class="n">data_len</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[csセミナー発表]]></title>
    <link href="http://guofei.github.com/master_report/blog/2012/09/19/csseminafa-biao/"/>
    <updated>2012-09-19T13:53:00+09:00</updated>
    <id>http://guofei.github.com/master_report/blog/2012/09/19/csseminafa-biao</id>
    <content type="html"><![CDATA[<h3>聞かれた問題</h3>

<ol>
<li><p>協調アプリケーションの例</p>

<p>動画協調アプリケーションやニュースフェードなどの協調アプリケーション</p></li>
<li><p>Firefoxを使う理由、Chromeなどのブラウザはなぜ使わない</p>

<p>開発の時、XMPPのXPCOMなどが使えるから、開発しやすい</p></li>
<li><p>どういう有用性があるのか？</p></li>
</ol>


<h3>評価用紙での質問とコメント</h3>

<ol>
<li>早口</li>
<li>中央サーバを用いた時のセキュリティの問題は？</li>
<li>XMPPの説明はわかりにくい</li>
<li>例えば複数のユーザがドキュメントを編集する時、そのドキュメントのデータはいったいどこにあるのか、何が中央サーバの役割を担うのかがよくわからなかった。</li>
</ol>


<p>QAレポートを作成中</p>

<h3>暗号化</h3>

<p>ユーザは鍵の場所を指定して、鍵を読み込む部分を書いている</p>

<h3>JsMruby - mruby NPAPI plugin</h3>

<p>ブラウザからrubyを実行できるプラグイン。JavaScriptからmruby スクリプトの実行とmrubyからJavaScript スクリプトの実行ができる。</p>

<p>文章<br/>
http://masamitsu-murase.blogspot.jp/2012/09/jsmruby-mruby-npapi-plugin.html</p>

<p>ソースコード（c＋＋）<br/>
https://github.com/masamitsu-murase/JsMruby</p>

<h3>就職</h3>

<p>１８日に最終面接を受けて、落ちました。。。</p>
]]></content>
  </entry>
  
</feed>
